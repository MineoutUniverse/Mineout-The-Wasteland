# This is a basic workflow to help you get started with Actions

name: PreReleasePackCI

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching alpha*, i.e. v1.x, v2.1-alpha1, v3.1.2-beta2, etc..

jobs:
  build:
    name: Building Pack Files to publish Release State
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip -r artifact.zip . -x ".*"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: MineoutTW Build (${{ github.ref }})
          body: |
            INSTALL THIS MANUALLY ON YOUR OWN
            Patch Notes at discord
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./artifact.zip
          asset_name: artifact.zip
          asset_content_type: application/zip
